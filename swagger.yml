consumes:
- application/json
info:
  description: as in title
  title: Just a Todo
  version: 1.0.0
produces:
- application/json
schemes:
- http
swagger: "2.0"
#
parameters:
  path_taskId:
    in: path
    name: taskId
    type: string
    required: true
    description: ID of a task
#
definitions:
  todo:
    type: object
    required:
      - todo
    properties:
      id:
        type: integer
        format: int64
        readOnly: true
      taskId:
        type: integer
        format: int64
        description: "task it is associated with"
      todo:
        type: string
        description: "the content of the todo"
      done:
        type: boolean
  task:
    type: object
    required:
      - title
    properties:
      id:
        type: integer
        format: int64
        readOnly: true
      title:
        type: string
        description: "title of a task"
      done:
        type: boolean
#
paths:
  /ping:
    get:
      operationId: getPing
      responses:
        200:
          description: server is operational
          schema:
            type: string
            description: Server is up
        500:
          description: server is not responding
          schema:
            type: string
            description: Server is down
  /task:
    get:
      operationId: getTasks
      responses:
        200:
          description: Get all the tasks
          schema:
            type: array
            description: array of all the tasks
            items:
              $ref: "#/definitions/task"
        400:
          description: Incomplete data
          schema:
            type: string
            description: Body of the request was incomplete
    post:
      operationId: createTask
      parameters:
        - name: body
          in: body
          schema:
            $ref: "#/definitions/task"
      responses:
        200:
          description: Created task
          schema:
            $ref: "#/definitions/task"
        400:
          description: Incomplete data
          schema:
            type: string
            description: Body of the request was Incomplete
  /task/{taskId}:
    get:
      operationId: getTaskTodos
      parameters:
        - $ref: "#/parameters/path_taskId"
      responses:
        200:
          description: Get the todos associated to a taks
          schema:
            type: object
            description: the task and associated todos
            properties:
              task:
                $ref: "#/definitions/task"
              todos:
                type: array
                description: Array of todos
                items:
                  $ref: "#/definitions/todo"
  /todo:
    get:
      operationId: getTodos
      responses:
        200:
          description: Get all todos
          schema:
            type: array
            description: array of all the todos
            items:
              $ref: "#/definitions/todo"
        400:
          description: Incomplete data
          schema:
            type: string
            description: Body of the request was Incomplete
    post:
      operationId: createTodo
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/todo'
      responses:
        200:
          description: Created todo
          schema:
            $ref: "#/definitions/todo"
        400:
          description: Incomplete data
          schema:
            type: string
            description: Body of the request was Incomplete
  



