// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "as in title",
    "title": "Just a Todo",
    "version": "1.0.0"
  },
  "paths": {
    "/ping": {
      "get": {
        "operationId": "getPing",
        "responses": {
          "200": {
            "description": "server is operational",
            "schema": {
              "description": "Server is up",
              "type": "string"
            }
          },
          "500": {
            "description": "server is not responding",
            "schema": {
              "description": "Server is down",
              "type": "string"
            }
          }
        }
      }
    },
    "/project": {
      "get": {
        "operationId": "getProjects",
        "responses": {
          "200": {
            "description": "Get all the projects",
            "schema": {
              "description": "array of all the projects",
              "type": "array",
              "items": {
                "$ref": "#/definitions/project"
              }
            }
          }
        }
      },
      "post": {
        "description": "Create a new project",
        "operationId": "createProject",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "required": [
                "title"
              ],
              "properties": {
                "description": {
                  "description": "description of the project",
                  "type": "string"
                },
                "title": {
                  "description": "title of a project",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success message",
            "schema": {
              "description": "success",
              "type": "string"
            }
          }
        }
      }
    },
    "/project/{projectId}": {
      "get": {
        "description": "gets a project with its associated tasks and todos",
        "operationId": "getProject",
        "parameters": [
          {
            "$ref": "#/parameters/path_projectId"
          }
        ],
        "responses": {
          "200": {
            "description": "successful request",
            "schema": {
              "type": "object",
              "properties": {
                "project": {
                  "$ref": "#/definitions/project"
                },
                "tasks": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/taskTodos"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "deletes a Project and all associated tasks and todos",
        "operationId": "deleteProject",
        "parameters": [
          {
            "$ref": "#/parameters/path_projectId"
          }
        ],
        "responses": {
          "200": {
            "description": "successfully deleted",
            "schema": {
              "description": "success",
              "type": "string"
            }
          }
        }
      }
    },
    "/task": {
      "get": {
        "operationId": "getTasks",
        "responses": {
          "200": {
            "description": "Get all the tasks",
            "schema": {
              "description": "array of all the tasks",
              "type": "array",
              "items": {
                "$ref": "#/definitions/task"
              }
            }
          },
          "400": {
            "description": "Incomplete data",
            "schema": {
              "description": "Body of the request was incomplete",
              "type": "string"
            }
          }
        }
      },
      "post": {
        "operationId": "createTask",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "required": [
                "title",
                "projectId"
              ],
              "properties": {
                "projectId": {
                  "description": "id of project task belongs to",
                  "type": "string"
                },
                "title": {
                  "description": "Title of task",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Created task",
            "schema": {
              "$ref": "#/definitions/task"
            }
          },
          "400": {
            "description": "Incomplete data",
            "schema": {
              "description": "Body of the request was Incomplete",
              "type": "string"
            }
          }
        }
      }
    },
    "/task/{taskId}": {
      "get": {
        "operationId": "getTaskTodos",
        "parameters": [
          {
            "$ref": "#/parameters/path_taskId"
          }
        ],
        "responses": {
          "200": {
            "description": "Get the todos associated to a task",
            "schema": {
              "description": "the task and associated todos",
              "type": "object",
              "properties": {
                "task": {
                  "$ref": "#/definitions/task"
                },
                "todos": {
                  "description": "Array of todos",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/todo"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "deleteTask",
        "parameters": [
          {
            "$ref": "#/parameters/path_taskId"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete a task and associated todos",
            "schema": {
              "description": "success message",
              "type": "string"
            }
          }
        }
      }
    },
    "/task/{taskId}/todo": {
      "post": {
        "operationId": "createTaskTodo",
        "parameters": [
          {
            "$ref": "#/parameters/path_taskId"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "description": "Body request",
              "type": "object",
              "properties": {
                "todo": {
                  "description": "content of the todo",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success message",
            "schema": {
              "description": "operation was successful",
              "type": "string"
            }
          }
        }
      }
    },
    "/todo/{todoId}": {
      "delete": {
        "operationId": "deleteTodo",
        "parameters": [
          {
            "$ref": "#/parameters/path_todoId"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete a todo",
            "schema": {
              "description": "Successfully deleted a todo",
              "type": "string"
            }
          }
        }
      }
    },
    "/todo/{todoId}/status": {
      "post": {
        "operationId": "setTodoStatus",
        "parameters": [
          {
            "$ref": "#/parameters/path_todoId"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/todoStatus"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated the status of todo",
            "schema": {
              "description": "Successfully updated todo",
              "type": "string"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "project": {
      "type": "object",
      "required": [
        "id",
        "title",
        "description"
      ],
      "properties": {
        "description": {
          "description": "description of the project",
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64",
          "readOnly": true
        },
        "title": {
          "description": "title of a project",
          "type": "string"
        }
      }
    },
    "task": {
      "type": "object",
      "required": [
        "title",
        "done"
      ],
      "properties": {
        "done": {
          "type": "boolean"
        },
        "id": {
          "type": "integer",
          "format": "int64",
          "readOnly": true
        },
        "projectId": {
          "description": "project it is associated with",
          "type": "integer",
          "format": "int64"
        },
        "title": {
          "description": "title of a task",
          "type": "string"
        }
      }
    },
    "taskTodos": {
      "type": "object",
      "properties": {
        "task": {
          "$ref": "#/definitions/task"
        },
        "todos": {
          "description": "Array of todos",
          "type": "array",
          "items": {
            "$ref": "#/definitions/todo"
          }
        }
      }
    },
    "todo": {
      "type": "object",
      "required": [
        "todo",
        "done",
        "id"
      ],
      "properties": {
        "done": {
          "type": "boolean"
        },
        "id": {
          "type": "integer",
          "format": "int64",
          "readOnly": true
        },
        "taskId": {
          "description": "task it is associated with",
          "type": "integer",
          "format": "int64"
        },
        "todo": {
          "description": "the content of the todo",
          "type": "string"
        }
      }
    },
    "todoStatus": {
      "type": "object",
      "required": [
        "status"
      ],
      "properties": {
        "status": {
          "type": "boolean"
        }
      }
    }
  },
  "parameters": {
    "path_projectId": {
      "type": "string",
      "description": "ID of a project",
      "name": "projectId",
      "in": "path",
      "required": true
    },
    "path_taskId": {
      "type": "string",
      "description": "ID of a task",
      "name": "taskId",
      "in": "path",
      "required": true
    },
    "path_todoId": {
      "type": "string",
      "description": "ID of a todo",
      "name": "todoId",
      "in": "path",
      "required": true
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "as in title",
    "title": "Just a Todo",
    "version": "1.0.0"
  },
  "paths": {
    "/ping": {
      "get": {
        "operationId": "getPing",
        "responses": {
          "200": {
            "description": "server is operational",
            "schema": {
              "description": "Server is up",
              "type": "string"
            }
          },
          "500": {
            "description": "server is not responding",
            "schema": {
              "description": "Server is down",
              "type": "string"
            }
          }
        }
      }
    },
    "/project": {
      "get": {
        "operationId": "getProjects",
        "responses": {
          "200": {
            "description": "Get all the projects",
            "schema": {
              "description": "array of all the projects",
              "type": "array",
              "items": {
                "$ref": "#/definitions/project"
              }
            }
          }
        }
      },
      "post": {
        "description": "Create a new project",
        "operationId": "createProject",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "required": [
                "title"
              ],
              "properties": {
                "description": {
                  "description": "description of the project",
                  "type": "string"
                },
                "title": {
                  "description": "title of a project",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success message",
            "schema": {
              "description": "success",
              "type": "string"
            }
          }
        }
      }
    },
    "/project/{projectId}": {
      "get": {
        "description": "gets a project with its associated tasks and todos",
        "operationId": "getProject",
        "parameters": [
          {
            "type": "string",
            "description": "ID of a project",
            "name": "projectId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful request",
            "schema": {
              "type": "object",
              "properties": {
                "project": {
                  "$ref": "#/definitions/project"
                },
                "tasks": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/taskTodos"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "deletes a Project and all associated tasks and todos",
        "operationId": "deleteProject",
        "parameters": [
          {
            "type": "string",
            "description": "ID of a project",
            "name": "projectId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successfully deleted",
            "schema": {
              "description": "success",
              "type": "string"
            }
          }
        }
      }
    },
    "/task": {
      "get": {
        "operationId": "getTasks",
        "responses": {
          "200": {
            "description": "Get all the tasks",
            "schema": {
              "description": "array of all the tasks",
              "type": "array",
              "items": {
                "$ref": "#/definitions/task"
              }
            }
          },
          "400": {
            "description": "Incomplete data",
            "schema": {
              "description": "Body of the request was incomplete",
              "type": "string"
            }
          }
        }
      },
      "post": {
        "operationId": "createTask",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "required": [
                "title",
                "projectId"
              ],
              "properties": {
                "projectId": {
                  "description": "id of project task belongs to",
                  "type": "string"
                },
                "title": {
                  "description": "Title of task",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Created task",
            "schema": {
              "$ref": "#/definitions/task"
            }
          },
          "400": {
            "description": "Incomplete data",
            "schema": {
              "description": "Body of the request was Incomplete",
              "type": "string"
            }
          }
        }
      }
    },
    "/task/{taskId}": {
      "get": {
        "operationId": "getTaskTodos",
        "parameters": [
          {
            "type": "string",
            "description": "ID of a task",
            "name": "taskId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Get the todos associated to a task",
            "schema": {
              "description": "the task and associated todos",
              "type": "object",
              "properties": {
                "task": {
                  "$ref": "#/definitions/task"
                },
                "todos": {
                  "description": "Array of todos",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/todo"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "deleteTask",
        "parameters": [
          {
            "type": "string",
            "description": "ID of a task",
            "name": "taskId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Delete a task and associated todos",
            "schema": {
              "description": "success message",
              "type": "string"
            }
          }
        }
      }
    },
    "/task/{taskId}/todo": {
      "post": {
        "operationId": "createTaskTodo",
        "parameters": [
          {
            "type": "string",
            "description": "ID of a task",
            "name": "taskId",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "description": "Body request",
              "type": "object",
              "properties": {
                "todo": {
                  "description": "content of the todo",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success message",
            "schema": {
              "description": "operation was successful",
              "type": "string"
            }
          }
        }
      }
    },
    "/todo/{todoId}": {
      "delete": {
        "operationId": "deleteTodo",
        "parameters": [
          {
            "type": "string",
            "description": "ID of a todo",
            "name": "todoId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Delete a todo",
            "schema": {
              "description": "Successfully deleted a todo",
              "type": "string"
            }
          }
        }
      }
    },
    "/todo/{todoId}/status": {
      "post": {
        "operationId": "setTodoStatus",
        "parameters": [
          {
            "type": "string",
            "description": "ID of a todo",
            "name": "todoId",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/todoStatus"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated the status of todo",
            "schema": {
              "description": "Successfully updated todo",
              "type": "string"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "project": {
      "type": "object",
      "required": [
        "id",
        "title",
        "description"
      ],
      "properties": {
        "description": {
          "description": "description of the project",
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64",
          "readOnly": true
        },
        "title": {
          "description": "title of a project",
          "type": "string"
        }
      }
    },
    "task": {
      "type": "object",
      "required": [
        "title",
        "done"
      ],
      "properties": {
        "done": {
          "type": "boolean"
        },
        "id": {
          "type": "integer",
          "format": "int64",
          "readOnly": true
        },
        "projectId": {
          "description": "project it is associated with",
          "type": "integer",
          "format": "int64"
        },
        "title": {
          "description": "title of a task",
          "type": "string"
        }
      }
    },
    "taskTodos": {
      "type": "object",
      "properties": {
        "task": {
          "$ref": "#/definitions/task"
        },
        "todos": {
          "description": "Array of todos",
          "type": "array",
          "items": {
            "$ref": "#/definitions/todo"
          }
        }
      }
    },
    "todo": {
      "type": "object",
      "required": [
        "todo",
        "done",
        "id"
      ],
      "properties": {
        "done": {
          "type": "boolean"
        },
        "id": {
          "type": "integer",
          "format": "int64",
          "readOnly": true
        },
        "taskId": {
          "description": "task it is associated with",
          "type": "integer",
          "format": "int64"
        },
        "todo": {
          "description": "the content of the todo",
          "type": "string"
        }
      }
    },
    "todoStatus": {
      "type": "object",
      "required": [
        "status"
      ],
      "properties": {
        "status": {
          "type": "boolean"
        }
      }
    }
  },
  "parameters": {
    "path_projectId": {
      "type": "string",
      "description": "ID of a project",
      "name": "projectId",
      "in": "path",
      "required": true
    },
    "path_taskId": {
      "type": "string",
      "description": "ID of a task",
      "name": "taskId",
      "in": "path",
      "required": true
    },
    "path_todoId": {
      "type": "string",
      "description": "ID of a todo",
      "name": "todoId",
      "in": "path",
      "required": true
    }
  }
}`))
}
